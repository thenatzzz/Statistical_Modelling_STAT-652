help("airquality")
AQ = airquality
AQ
head(AQ,10)
head(AQ,5)
AQ = AQ_original[:,1:4]
AQ = AQ_original[,1:4]
AQ_original = airquality
head(AQ_original,5)
AQ = AQ_original[,1:4]
AQ
head(AQ)
help(plot)
plot(AQ$Solar.R,AQ$Ozone)
help("airquality")
plot(AQ$Solar.R,AQ$Ozone,main="title", sub="subtitle",
xlab="X-axis label", ylab="y-axix label")
help("airquality")
plot(AQ$Solar.R,AQ$Ozone,main="Air Quality",
xlab="Solar radiation (lang)", ylab="Ozone (ppb)")
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.5)
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1)
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
help("airquality")
plot(AQ$Wind,AQ$Ozone,
main="Air Quality",
xlab="Average wind speed (mph)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Temp,AQ$Ozone,
main="Air Quality",
xlab="Temperature (F)",
ylab="Ozone (ppb)",
cex.lab=1.2)
# a)
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
# a)
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
# a)
par(mfrow=(3,1))
# a)
par(mfrow=c(3,1))
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Wind,AQ$Ozone,
main="Air Quality",
xlab="Average wind speed (mph)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Temp,AQ$Ozone,
main="Air Quality",
xlab="Temperature (F)",
ylab="Ozone (ppb)",
cex.lab=1.2)
# a)
par(mfrow=c(3,1))
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
par('mar')
# a)
par(mfrow=c(3,1))
par(mar=c(1,1,1,1))
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Wind,AQ$Ozone,
main="Air Quality",
xlab="Average wind speed (mph)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Temp,AQ$Ozone,
main="Air Quality",
xlab="Temperature (F)",
ylab="Ozone (ppb)",
cex.lab=1.2)
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
# Put graphs in 3 rows and 1 column
par(mfrow = c(3, 1))
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
hist(iris$Petal.Width [iris$Species == "versicolor"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Versicolor",
xlab = "",
col = "purple")
hist(iris$Petal.Width [iris$Species == "virginica"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Virginica",
xlab = "",
col = "blue")
# Restore graphic parameter
par(mfrow=c(1, 1))
# Put graphs in 3 rows and 1 column
par(mfrow = c(3, 1))
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
hist(iris$Petal.Width [iris$Species == "versicolor"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Versicolor",
xlab = "",
col = "purple")
hist(iris$Petal.Width [iris$Species == "virginica"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Virginica",
xlab = "",
col = "blue")
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Wind,AQ$Ozone,
main="Air Quality",
xlab="Average wind speed (mph)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Temp,AQ$Ozone,
main="Air Quality",
xlab="Temperature (F)",
ylab="Ozone (ppb)",
cex.lab=1.2)
# Restore graphic parameter
par(mfrow=c(1, 1))
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Wind,AQ$Ozone,
main="Air Quality",
xlab="Average wind speed (mph)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Temp,AQ$Ozone,
main="Air Quality",
xlab="Temperature (F)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
help("airquality")
AQ_original = airquality
head(AQ_original,5)
# X= Solar.R, Wind, Temp
# Y = Ozone
AQ = AQ_original[,1:4]
head(AQ)
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Wind,AQ$Ozone,
main="Air Quality",
xlab="Average wind speed (mph)",
ylab="Ozone (ppb )",
cex.lab=1.2)
plot(AQ$Temp,AQ$Ozone,
main="Air Quality",
xlab="Temperature (F)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
# X= Solar.R, Wind, Temp
# Y = Ozone
AQ = AQ_original[,1:4]
head(AQ)
plot(AQ$Solar.R,AQ$Ozone,
main="Air Quality",
xlab="Solar radiation (lang)",
ylab="Ozone (ppb)",
cex.lab=1.2)
plot(AQ$Wind,AQ$Ozone,
main="Air Quality",
xlab="Average wind speed (mph)",
ylab="Ozone (ppb )",
cex.lab=1.2)
plot(AQ$Temp,AQ$Ozone,
main="Air Quality",
xlab="Temperature (F)",
ylab="Ozone (ppb)",
cex.lab=1.2)
# 1.b)
pairs(AQ)
################## 2. ##############################
# X against Y
#2.a report 3 slopes and t-values in a table
lm_Solar = lm(Solor.R~Ozone, data = AQ)
################## 2. ##############################
# X against Y
#2.a report 3 slopes and t-values in a table
lm_Solar = lm(AQ$Solor.R~Ozone, data = AQ)
################## 2. ##############################
# X against Y
#2.a report 3 slopes and t-values in a table
lm_Solar = lm(AQ$Solor.R~AQ$Ozone, data = AQ)
AQ
################## 2. ##############################
# X against Y
#2.a report 3 slopes and t-values in a table
lm_Solar = lm(Solor.R ~ Ozone, data = AQ)
################## 2. ##############################
# X against Y
attach(AQ)
#2.a report 3 slopes and t-values in a table
lm_Solar = lm(Solor.R ~ Ozone, data = AQ)
#2.a report 3 slopes and t-values in a table
lm_Solar = lm(Wind ~ Ozone, data = AQ)
AQ
#2.a report 3 slopes and t-values in a table
lm_Solar = lm(Solar.R ~ Ozone, data = AQ)
summary(lm_Solar)
#2.a report 3 slopes and t-values in a table
lm_Solar = lm(Ozone ~ Solar.R, data = AQ)
summary(lm_Solar)
#2.a report 3 slopes and t-values in a table
lm_SolarOzone = lm(Ozone ~ Solar.R, data = AQ)
summary(lm_SolarOzone)
#2.a report 3 slopes and t-values in a table
lm_SolarOzone = lm(Ozone ~ Solar.R, data = AQ)
#2.a report 3 slopes and t-values in a table
lm_SolarOzone = lm(Ozone ~ Solar.R, data = AQ)
summary(lm_SolarOzone)
modelSummary <- summary(lm_SolarOzone)  # capture model summary as an object
modelCoeffs <- modelSummary$coefficients  # model coefficients
beta.estimate <- modelCoeffs["Solar.R", "Estimate"]  # get beta estimate for speed
std.error <- modelCoeffs["Solar.R", "Std. Error"]  # get std.error for speed
t_value <- beta.estimate/std.error  # calc t statistic
p_value <- 2*pt(-abs(t_value), df=nrow(AQ)-ncol(AQ))  # calc p Value
f_statistic <- lm_SolarOzone$fstatistic[1]  # fstatistic
f <- summary(lm_SolarOzone)$fstatistic  # parameters for model p-value calc
model_p <- pf(f[1], f[2], f[3], lower=FALSE)
t_value
t_value,p_value,f_statistic,model_p
summary(lm_SolarOzone)
t_value
p_value
f_statistic
model_p
AQ
p_value <- 2*pt(-abs(t_value), df=nrow(AQ[,1:3])-ncol(AQ[,1:3]))  # calc p Value
f_statistic <- lm_SolarOzone$fstatistic[1]  # fstatistic
f <- summary(lm_SolarOzone)$fstatistic  # parameters for model p-value calc
model_p <- pf(f[1], f[2], f[3], lower=FALSE)
t_value
p_value
f_statistic
model_p
summary(lm_SolarOzone)
# Clear console
cat("\014")  # ctrl+L
summary(lm_SolarOzone)
lm_ = lm(Ozone ~ Solar.R, Wind, data = AQ)
summary(lm_)
lm_ = lm(Ozone ~ Solar.R, Wind, data = AQ)
summary(lm_)
lm_ = lm(Ozone ~ Solar.R, data = AQ)
summary(lm_)
summary(lm_SolarOzone)
summary(lm_WindOzone)
lm_WindOzone = lm(Ozone ~ Wind, data = AQ)
summary(lm_WindOzone)
lm_TempOzone = lm(Ozone ~ Temperature, data = AQ)
summary(lm_TempOzone)
lm_TempOzone = lm(Ozone ~ Temp, data = AQ)
summary(lm_Temp)
lm_TempOzone = lm(Ozone ~ Temp, data = AQ)
summary(lm_TempOzone)
with(AQ,plot(Solar.R, Ozone))
abline(lm_SolarOzone)
par(mar=c(1,1,1,1))
with(AQ,plot(Solar.R, Ozone))
abline(lm_SolarOzone)
with(AQ,plot(Solar.R, Ozone))
abline(lm_SolarOzone)
par('mar')
par(mar=c(1,1,1,1))
with(AQ,plot(Solar.R, Ozone))
