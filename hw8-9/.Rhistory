summary(mod.2step)
x1 <- seq(from=-2, to=25, by=.05)
x2 = seq(from=0, to=100, by=.5)
xy1 <- data.frame(expand.grid(Wind=x1, Temp=x2))
xy1c = data.frame(Wind.hilo = (xy1$Wind < median(AQ$Wind)),
Temp.hilo = (xy1$Temp < median(AQ$Temp)))
pred2 <- predict(mod.2step ,newdata=xy1c)
surface2 = matrix(pred2, nrow=length(x1))
open3d()
persp3d(x = x1, y = x2,
z = surface2, col = "orange", xlab="Wind", ylab="Temp",
zlab="Predicted Ozone")
points3d(AQ$Ozone ~  AQ$Wind+  AQ$Temp, col="blue")
AQ
summary(AQ$TWcp)
######### hw 9 ###########
# clear var
rm(list=ls(all=TRUE))
# Clear plots
dev.off()  # But only if there IS a plot
set.seed(2928893)
help("airquality")
AQ_original = airquality
head(AQ_original,5)
# X= Solar.R, Wind, Temp
# Y = Ozone
AQ = AQ_original[,1:4]
AQ = na.omit(airquality[,1:4])
AQ$TWcp = AQ$Temp*AQ$Wind # cross-product
AQ$TWrat = AQ$Temp/AQ$Wind # ratio
head(AQ)
plot(x=AQ$Temp, y=AQ$Ozone, type="l", main="Plot Ozone ~ Temp")
plot(x=AQ$Temp, y=AQ$Ozone, type="l", main="Plot Ozone ~ Temp")
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=covid, Cases ~ poly(x=date, degree=3))
summary(poly3)
lines(x=covid$date, y=predict(poly3, newdata=covid), col=colors()[24], lwd=2)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=2)
# Clear plots
dev.off()  # But only if there IS a plot
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=2)
lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x=18300, y=170,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x=18300, y=170,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x=18300, y=170,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
covid <-  read.csv ("Covid BC 2020-09-22.csv", header=TRUE)
covid$date = as.Date(covid$Date, "%Y-%m-%d")
head(covid)
summary(covid)
# Plot of data
# x11(h=7, w=10)
plot(x=covid$date, y=covid$Cases, type="l", main="Plot of Daily BC Covid-19 Cases over time")
##################################################################
# Plot with added polynomials
x11(h=7, w=10)
plot(x=covid$date, y=covid$Cases, type="l", col="gray",
main="Plot of Daily BC Covid-19 Cases over time")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x=18300, y=170,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x=18300, y=170,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x=18300, y=170,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
plot(x=covid$date, y=covid$Cases, type="l", col="gray",
main="Plot of Daily BC Covid-19 Cases over time")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x=0, y=170,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x=0, y=170,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
plot(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
lm_SolarOzone= plot(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
abline(lm_SolarOzone)
abline(lm_SolarOzone)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
abline(poly3)
line(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
abline(y=predict(poly3, newdata=AQ))
abline(predict(poly3, newdata=AQ))
abline(poly3)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
# lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
abline(poly3)
# lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
abline(poly3)
lines(x=AQ$Temp, y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
lines(x=sorted(AQ$Temp), y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
lines(x=sorted(AQ$Temp), y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
lines(sorted(AQ$Temp), y=predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
lines(sorted(AQ$Temp), predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(sorted(AQ$Temp), predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
lines(sort(AQ$Temp), predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
AQ = AQ[order(Temp),]
AQ = AQ[order(AQ$Temp),]
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(sort(AQ$Temp), predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("3rd order poly", "6th order poly", "9th order poly", '12th order poly'), lty="solid",
col=colors()[c(24,121,145,84)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(AQ$Temp, predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("Cubic poly", "Cubic spline 5 df", "Cubic spline 7 df", 'Cubic spline 9 df','Cubic spline 20 df'), lty="solid",
col=colors()[c(24,121,145,84,2)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(AQ$Temp, predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("Cubic poly", "Cubic spline 5 df", "Cubic spline 7 df", 'Cubic spline 9 df','Cubic spline 20 df'), lty="solid",
col=colors()[c(24,121,145,84,33)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(AQ$Temp, predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
cub.spl.5 <- lm(data=AQ, Cases ~ bs(Temp,df=5))
summary(cub.spl.5) #Doesn't mean much
library(splines)
cub.spl.5 <- lm(data=AQ, Cases ~ bs(Temp,df=5))
summary(cub.spl.5) #Doesn't mean much
cub.spl.5 <- lm(data=AQ, Cases ~ bs(Temp,df=5))
cub.spl.5 <- lm(data=AQ, Ozone ~ bs(Temp,df=5))
summary(cub.spl.5) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.5, newdata=AQ), col=colors()[121], lwd=2)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("Cubic poly", "Cubic spline 5 df", "Cubic spline 7 df", 'Cubic spline 9 df','Cubic spline 20 df'), lty="solid",
col=colors()[c(24,121,145,84,33)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(AQ$Temp, predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
cub.spl.5 <- lm(data=AQ, Ozone ~ bs(Temp,df=5))
summary(cub.spl.5) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.5, newdata=AQ), col=colors()[121], lwd=2)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("Cubic poly", "Cubic spline 5 df", "Cubic spline 7 df", 'Cubic spline 9 df','Cubic spline 20 df'), lty="solid",
col=colors()[c(24,121,145,84,33)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(AQ$Temp, predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
cub.spl.5 <- lm(data=AQ, Ozone ~ bs(Temp,df=5))
# summary(cub.spl.5) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.5, newdata=AQ), col=colors()[121], lwd=2)
cub.spl.7 <- lm(data=AQ, Ozone ~ bs(Temp,df=7))
# summary(cub.spl.7) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.7, newdata=AQ), col=colors()[145], lwd=2)
cub.spl.9 <- lm(data=AQ, Ozone ~ bs(Temp,df=9))
# summary(cub.spl.9) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.9, newdata=AQ), col=colors()[84], lwd=2)
cub.spl.20 <- lm(data=AQ, Ozone ~ bs(Temp,df=20))
# summary(cub.spl.5) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.20, newdata=AQ), col=colors()[33], lwd=2)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("Cubic poly", "Cubic spline 5 df", "Cubic spline 7 df", 'Cubic spline 9 df','Cubic spline 20 df'), lty="solid",
col=colors()[c(24,121,145,84,33)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(AQ$Temp, predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
cub.spl.5 <- lm(data=AQ, Ozone ~ bs(Temp,df=5))
# summary(cub.spl.5) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.5, newdata=AQ), col=colors()[121], lwd=2)
cub.spl.7 <- lm(data=AQ, Ozone ~ bs(Temp,df=7))
# summary(cub.spl.7) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.7, newdata=AQ), col=colors()[145], lwd=2)
cub.spl.9 <- lm(data=AQ, Ozone ~ bs(Temp,df=9))
# summary(cub.spl.9) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.9, newdata=AQ), col=colors()[84], lwd=2)
cub.spl.20 <- lm(data=AQ, Ozone ~ bs(Temp,df=20))
# summary(cub.spl.5) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.20, newdata=AQ), col=colors()[33], lwd=2)
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(x="topleft", y=0.92,
legend=c("Cubic poly", "Cubic spline 5 df", "Cubic spline 7 df", 'Cubic spline 9 df','Cubic spline 20 df'), lty="solid",
col=colors()[c(24,121,145,84,33)], lwd=2)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data=AQ, Ozone ~ poly(x=Temp, degree=3))
summary(poly3)
lines(AQ$Temp, predict(poly3, newdata=AQ), col=colors()[24], lwd=1)
cub.spl.5 <- lm(data=AQ, Ozone ~ bs(Temp,df=5))
# summary(cub.spl.5) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.5, newdata=AQ), col=colors()[121], lwd=2)
cub.spl.7 <- lm(data=AQ, Ozone ~ bs(Temp,df=7))
# summary(cub.spl.7) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.7, newdata=AQ), col=colors()[145], lwd=2)
cub.spl.9 <- lm(data=AQ, Ozone ~ bs(Temp,df=9))
# summary(cub.spl.9) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.9, newdata=AQ), col=colors()[84], lwd=2)
cub.spl.20 <- lm(data=AQ, Ozone ~ bs(Temp,df=20))
# summary(cub.spl.5) #Doesn't mean much
lines(x=AQ$Temp, y=predict(cub.spl.20, newdata=AQ), col=colors()[33], lwd=2)
summary(poly3)
summary(cub.spl.5) #Doesn't mean much
summary(cub.spl.7) #Doesn't mean much
summary(cub.spl.9) #Doesn't mean much
summary(cub.spl.5) #Doesn't mean much
summary(poly3)
summary(cub.spl.5) #Doesn't mean much
summary(cub.spl.7) #Doesn't mean much
summary(cub.spl.9) #Doesn't mean much
summary(cub.spl.5) #Doesn't mean much
summary(poly3)
summary(cub.spl.5) #Doesn't mean much
summary(cub.spl.7) #Doesn't mean much
summary(cub.spl.9) #Doesn't mean much
summary(cub.spl.5) #Doesn't mean much
x11(h=7, w=10)
plot(x=AQ$Temp, y=AQ$Ozone, main="Plot Ozone ~ Temp")
legend(x="topleft", y=0.92,
legend=c( "Natural spline 5 df", "Natural spline 7 df", 'Natural spline 9 df'), lty="solid",
col=colors()[c(121,145,84)], lwd=2)
nat.spl.5 <- lm(data=AQ, Ozone ~ ns(Temp,df=5))
summary(nat.spl.5) #Doesn't mean much
lines(x=AQ$Temp, y=predict(nat.spl.5, newdata=AQ), col=colors()[121], lwd=2)
nat.spl.7 <- lm(data=AQ, Ozone ~ ns(Temp,df=7))
summary(nat.spl.7) #Doesn't mean much
lines(x=AQ$Temp, y=predict(nat.spl.7, newdata=AQ), col=colors()[145], lwd=2)
nat.spl.9 <- lm(data=AQ, Ozone ~ ns(Temp,df=9))
summary(nat.spl.9) #Doesn't mean much
lines(x=AQ$Temp, y=predict(nat.spl.9, newdata=AQ), col=colors()[84], lwd=2)
# clear var
rm(list=ls(all=TRUE))
# Clear plots
dev.off()  # But only if there IS a plot
set.seed(2928893)
####### Application #################
help("airquality")
AQ_original = airquality
head(AQ_original,5)
# X= Solar.R, Wind, Temp
# Y = Ozone
AQ = AQ_original[,1:4]
AQ = na.omit(airquality[,1:4])
AQ$TWcp = AQ$Temp*AQ$Wind # cross-product
AQ$TWrat = AQ$Temp/AQ$Wind # ratio
head(AQ)
####1 median wind,temp
median(AQ$Wind)
median(AQ$Temp)
Wind.hilo = (AQ$Wind < median(AQ$Wind))
Wind.hilo
Temp.hilo = (AQ$Temp < median(AQ$Temp))
Temp.hilo
head(data.frame(AQ$Wind, Wind.hilo, AQ$Temp, Temp.hilo))
tail(data.frame(AQ$Wind, Wind.hilo, AQ$Temp, Temp.hilo))
# clear var
rm(list=ls(all=TRUE))
# Clear plots
dev.off()  # But only if there IS a plot
set.seed(2928893)
####### Application #################
help("airquality")
AQ_original = airquality
head(AQ_original,5)
# X= Solar.R, Wind, Temp
# Y = Ozone
AQ = AQ_original[,1:4]
AQ = na.omit(airquality[,1:4])
AQ$TWcp = AQ$Temp*AQ$Wind # cross-product
AQ$TWrat = AQ$Temp/AQ$Wind # ratio
head(AQ)
####1 median wind,temp
median(AQ$Wind)
median(AQ$Temp)
Wind.hilo = (AQ$Wind < median(AQ$Wind))
Wind.hilo
Temp.hilo = (AQ$Temp < median(AQ$Temp))
Temp.hilo
head(data.frame(AQ$Wind, Wind.hilo, AQ$Temp, Temp.hilo))
tail(data.frame(AQ$Wind, Wind.hilo, AQ$Temp, Temp.hilo))
data.frame(AQ$Wind, Wind.hilo, AQ$Temp, Temp.hilo)
## 3.
#No interaction
mod.2step = lm(AQ$Ozone ~ Wind.hilo + Temp.hilo)
summary(mod.2step)
# c
library(rgl)
open3d()
plot3d(AQ$Ozone ~ AQ$Wind + AQ$Temp, col="blue")
x1 <- seq(from=-2, to=25, by=.05)
x2 = seq(from=0, to=100, by=.5)
xy1 <- data.frame(expand.grid(Wind=x1, Temp=x2))
xy1c = data.frame(Wind.hilo = (xy1$Wind < median(AQ$Wind)),
Temp.hilo = (xy1$Temp < median(AQ$Temp)))
pred2 <- predict(mod.2step ,newdata=xy1c)
surface2 = matrix(pred2, nrow=length(x1))
open3d()
persp3d(x = x1, y = x2,
z = surface2, col = "orange", xlab="Wind", ylab="Temp",
zlab="Predicted Ozone")
points3d(AQ$Ozone ~  AQ$Wind+  AQ$Temp, col="blue")
open3d()
persp3d(x = x1, y = x2,
z = surface2, col = "orange", xlab="Wind", ylab="Temp",
zlab="Predicted Ozone")
points3d(AQ$Ozone ~  AQ$Wind+  AQ$Temp, col="blue")
# x1 <- seq(from=-2, to=25, by=.05)
x1 <- seq(from=-2, to=50, by=.05)
# x2 = seq(from=0, to=100, by=.5)
x2 = seq(from=0, to=200, by=.5)
xy1 <- data.frame(expand.grid(Wind=x1, Temp=x2))
xy1c = data.frame(Wind.hilo = (xy1$Wind < median(AQ$Wind)),
Temp.hilo = (xy1$Temp < median(AQ$Temp)))
pred2 <- predict(mod.2step ,newdata=xy1c)
surface2 = matrix(pred2, nrow=length(x1))
open3d()
persp3d(x = x1, y = x2,
z = surface2, col = "orange", xlab="Wind", ylab="Temp",
zlab="Predicted Ozone")
points3d(AQ$Ozone ~  AQ$Wind+  AQ$Temp, col="blue")
summary(AQ$Wind)
summary(AQ$Temp)
x1 <- seq(from=-2, to=25, by=.05)
# x1 <- seq(from=-2, to=50, by=.05)
x2 = seq(from=0, to=100, by=.5)
# x2 = seq(from=0, to=200, by=.5)
xy1 <- data.frame(expand.grid(Wind=x1, Temp=x2))
xy1c = data.frame(Wind.hilo = (xy1$Wind < median(AQ$Wind)),
Temp.hilo = (xy1$Temp < median(AQ$Temp)))
pred2 <- predict(mod.2step ,newdata=xy1c)
surface2 = matrix(pred2, nrow=length(x2))
open3d()
persp3d(x = x1, y = x2,
z = surface2, col = "orange", xlab="Wind", ylab="Temp",
zlab="Predicted Ozone")
points3d(AQ$Ozone ~  AQ$Wind+  AQ$Temp, col="blue")
